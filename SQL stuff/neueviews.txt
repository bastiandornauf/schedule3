
create view treatedWithItems as
(
    SELECT tw.treatmentId, tw.invoiceGroupId, tw. invoiceItemId, 
            g.label,
            i.tariffMain, i.tariffSub, i.description

    FROM    treatedWith AS tw,
             invoiceGroup AS g,
             invoiceItem AS i
             
    WHERE   (tw.invoiceGroupId = g.id OR tw.invoiceItemId = i.id)
    GROUP BY tw.id
);


create view affirmationAwaitingAppointments as
(
    SELECT 
            a.id, a.startdate, a.enddate, a.label, a.treatmentId,
            p.lastName, p.firstName, 
            t.diagnosis 

      FROM appointment AS a, patient as p, treatment as t
      WHERE (a.startdate < now() 
            AND a.occured = false
            AND a.treatmentId IS NOT NULL)

      AND (( a.treatmentId = t.id)
            AND ( t.patientId = p.id ))  

      ORDER BY startDate
);

create view AppointmentsForInvoice as
(
    SELECT 
            a.id, a.startdate, a.enddate, a.label, a.treatmentId,
            p.lastName, p.firstName, p.id as patientId, p.insuranceId, p.methodOfPayment

      FROM appointment AS a, patient as p, treatment as t
      WHERE (a.startdate < now() 
            AND a.occured = true
            AND a.treatmentId IS NOT NULL
            AND a.InvoiceId IS NULL)

      AND (( a.treatmentId = t.id)
            AND ( t.patientId = p.id ))  

      ORDER BY startDate
);


// TODO
create view twi_complete as
(
Select t.treatmentId, t.invoiceGroupId, t. invoiceItemId, 
            t.label,
            t.tariffMain, t.tariffSub, t.description 
from treatedWithItems as t, groupitems as g
where  t.invoiceGroupId = NULL OR
      (t.invoiceGroupId = g.invoiceGroupId and t.invoiceItemId = g.invoiceitemid)
);



select * from groupitems natural left join fee where groupitems.invoicegroupid=1;
// BATCH KOMPRESS SQL DUMPS
c:\program files\winrar\winrar" a -ag name *.sql




    SELECT 
            a.id, a.startdate, a.enddate, a.label, a.treatmentId,
            p.lastName, p.firstName, p.id as patientId

      FROM appointment AS a NATURAL LEFT JOIN  treatment as t, patient as p
      WHERE (a.startdate < now() 
            AND a.occured = true
            AND a.treatmentId IS NOT NULL
            AND a.InvoiceId IS NULL)

      AND (( a.treatmentId = t.id)
            AND ( t.patientId = p.id ))  

      ORDER BY startDate





